diff --git a/Source/automap.cpp b/Source/automap.cpp
index 9b734e22..d5c64b17 100644
--- a/Source/automap.cpp
+++ b/Source/automap.cpp
@@ -479,6 +479,7 @@ static void DrawAutomapPlr()
 {
 	int px, py;
 	int x, y;
+	int plrno;
 
 	if (plr[myplr]._pmode == PM_WALK3) {
 		x = plr[myplr]._pfutx;
@@ -505,6 +506,37 @@ static void DrawAutomapPlr()
 	}
 	y -= AmLine8;
 
+	{
+	int plrno;
+        for (plrno = 0; plrno < MAX_PLRS; plrno++) {
+                if (currlevel != plr[plrno].plrlevel) {
+			continue;
+                }
+			int x = plr[plrno].WorldX;
+			int y = plr[plrno].WorldY;
+			int px = x - 2 * AutoMapXOfs - ViewX;
+			int py = y - 2 * AutoMapYOfs - ViewY;
+
+                        x = (plr[plrno]._pxoff * AutoMapScale / 100 >> 1) + (ScrollInfo._sxoff * AutoMapScale / 100 >> 1) + (px - py) * AmLine16 + 384;
+                        y = (plr[plrno]._pyoff * AutoMapScale / 100 >> 1) + (ScrollInfo._syoff * AutoMapScale / 100 >> 1) + (px + py) * AmLine8 + 336;
+
+			if (invflag || sbookflag)
+                            x -= 160;
+                        if (chrflag || questlog)
+				x += 160;
+                        y -= AmLine8;
+
+                        if (plrno != myplr) {
+		            /* Draw cross for other players in game */
+                            int t = AmLine16 / 6;
+                            int l = AmLine16 / 4;
+
+                            DrawLine(x-l, y-t, x + l, y + l, COLOR_PLAYER);
+                            DrawLine(x-l, y+l, x + l, y - t, COLOR_PLAYER);
+                        }
+                  }
+        }
+
 	switch (plr[myplr]._pdir) {
 	case DIR_N:
 		DrawLine(x, y, x, y - AmLine16, COLOR_PLAYER);
diff --git a/structs.h b/structs.h
index 684a6a7c..37f9a313 100644
--- a/structs.h
+++ b/structs.h
@@ -190,6 +190,8 @@ typedef struct PlayerStruct {
 	int destParam3;
 	int destParam4;
 	int plrlevel;
+        int WorldX;
+        int WorldY;
 	int _px;
 	int _py;
 	int _pfutx;
